<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NuGet.RuntimeModel</name>
    </assembly>
    <members>
        <member name="T:NuGet.RuntimeModel.IObjectWriter">
            <summary>
            Provides functionality for writing an object graph.
            The output format is defined by implementors.
            </summary>
        </member>
        <member name="M:NuGet.RuntimeModel.IObjectWriter.WriteObjectStart(System.String)">
             <summary>
             Writes the start of a nested object.
            
             This new object becomes the scope for all other method calls until either WriteObjectStart
             is called again to start a new nested object or WriteObjectEnd is called.
            
             Every call to WriteObjectStart must be balanced by a corresponding call to WriteObjectEnd.
             </summary>
             <param name="name">The name of the object.  Throws if <c>null</c>.</param>
        </member>
        <member name="M:NuGet.RuntimeModel.IObjectWriter.WriteObjectEnd">
             <summary>
             Writes the end of a nested object.
            
             The parent object for this object becomes the scope for subsequent method calls.
             If this object is the root object, no further writing is allowed.
            
             Every call to WriteObjectStart must be balanced by a corresponding call to WriteObjectEnd.
             </summary>
        </member>
        <member name="M:NuGet.RuntimeModel.IObjectWriter.WriteNameValue(System.String,System.Int32)">
            <summary>
            Writes a name-value pair.
            </summary>
            <param name="name">The name of the datum.  Throws if <c>null</c>.</param>
            <param name="value">The datum.</param>
        </member>
        <member name="M:NuGet.RuntimeModel.IObjectWriter.WriteNameValue(System.String,System.Boolean)">
            <summary>
            Writes a name-value pair.
            </summary>
            <param name="name">The name of the datum.  Throws if <c>null</c>.</param>
            <param name="value">The datum.</param>
        </member>
        <member name="M:NuGet.RuntimeModel.IObjectWriter.WriteNameValue(System.String,System.String)">
            <summary>
            Writes a name-value pair.
            </summary>
            <param name="name">The name of the datum.  Throws if <c>null</c>.</param>
            <param name="value">The datum.</param>
        </member>
        <member name="M:NuGet.RuntimeModel.IObjectWriter.WriteNameArray(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes a name-collection pair.
            </summary>
            <param name="name">The name of the data.  Throws if <c>null</c>.</param>
            <param name="values">The data.</param>
        </member>
        <member name="T:NuGet.RuntimeModel.JsonObjectWriter">
             <summary>
             Generates JSON from an object graph.
            
             This is non-private only to facilitate unit testing.
             </summary>
        </member>
        <member name="M:NuGet.RuntimeModel.JsonObjectWriter.GetJson">
             <summary>
             Gets the JSON for the object.
            
             Once <see cref="M:NuGet.RuntimeModel.JsonObjectWriter.GetJson"/> is called, no further writing is allowed.
             </summary>
        </member>
        <member name="M:NuGet.RuntimeModel.JsonObjectWriter.GetJObject">
            <summary>
            Gets the JObject (in-memory JSON model) for the object.
            
            Once <see cref="M:NuGet.RuntimeModel.JsonObjectWriter.GetJObject"/> is called, no further writing is allowed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NuGet.RuntimeModel.JsonObjectWriter.WriteTo(Newtonsoft.Json.JsonTextWriter)">
             <summary>
             Writes the result to a <c>JsonTextWriter</c>.
            
             Once WriteTo is called, no further writing is allowed.
             </summary>
        </member>
        <member name="M:NuGet.RuntimeModel.RuntimeDescription.Merge(NuGet.RuntimeModel.RuntimeDescription,NuGet.RuntimeModel.RuntimeDescription)">
            <summary>
            Merges the content of the other runtime description in to this runtime description
            </summary>
            <param name="other">The other description to merge in to this description</param>
        </member>
        <member name="M:NuGet.RuntimeModel.RuntimeGraph.Merge(NuGet.RuntimeModel.RuntimeGraph,NuGet.RuntimeModel.RuntimeGraph)">
            <summary>
            Merges the content of the other runtime graph in to this runtime graph
            </summary>
            <param name="other">The other graph to merge in to this graph</param>
        </member>
        <member name="M:NuGet.RuntimeModel.RuntimeGraph.AreCompatible(System.String,System.String)">
            <summary>
            Determines if two runtime identifiers are compatible, based on the import graph
            </summary>
            <param name="criteria">The criteria being tested</param>
            <param name="provided">The value the criteria is being tested against</param>
            <returns>
            true if an asset for the runtime in <paramref name="provided" /> can be installed in a project
            targetting <paramref name="criteria" />, false otherwise
            </returns>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.OrderedEquals``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two enumberables for equality, ordered according to the specified key and optional comparer. Handles null values gracefully.
            </summary>
            <typeparam name="TSource">The type of the list</typeparam>
            <typeparam name="TKey">The type of the sorting key</typeparam>
            <param name="self">This list</param>
            <param name="other">The other list</param>
            <param name="keySelector">The function to extract the key from each item in the list</param>
            <param name="orderComparer">An optional comparer for comparing keys</param>
            <param name="sequenceComparer">An optional comparer for sequences</param>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.SequenceEqualWithNullCheck``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two sequence for equality, allowing either sequence to be null. If one is null, both have to be
            null for equality.
            </summary>
        </member>
        <member name="T:NuGet.Shared.HashCodeCombiner">
            <summary>
            Hash code creator, based on the original NuGet hash code combiner/ASP hash code combiner implementations
            </summary>
        </member>
        <member name="M:NuGet.Shared.HashCodeCombiner.GetHashCode(System.Object[])">
            <summary>
            Create a unique hash code for the given set of items
            </summary>
        </member>
    </members>
</doc>
